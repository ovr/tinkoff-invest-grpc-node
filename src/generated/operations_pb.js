// source: operations.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BrokerReport', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.PayloadCase', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.PayloadCase', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Operation', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.OperationState', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.OperationType', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.OperationsRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.OperationsResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PositionsFutures', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PositionsRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PositionsResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.OperationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.OperationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.OperationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.OperationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Operation.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Operation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PositionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PositionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PositionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.PositionsFutures, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.displayName = 'proto.tinkoff.public.invest.api.contract.v1.PositionsFutures';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.oneofGroups_);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.oneofGroups_);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.BrokerReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.BrokerReport.displayName = 'proto.tinkoff.public.invest.api.contract.v1.BrokerReport';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    figi: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.OperationsRequest;
  return proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.OperationState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional OperationState state = 4;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationState}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.getState = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.OperationState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationState} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string figi = 5;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsRequest.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.tinkoff.public.invest.api.contract.v1.Operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.OperationsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Operation;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Operation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Operation operations = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Operation>}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Operation, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Operation>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.prototype.setOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Operation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.OperationsResponse.prototype.clearOperationsList = function() {
  return this.setOperationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentOperationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payment: (f = msg.getPayment()) && common_pb.MoneyValue.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && common_pb.MoneyValue.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 6, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 7, 0),
    quantityRest: jspb.Message.getFieldWithDefault(msg, 8, 0),
    figi: jspb.Message.getFieldWithDefault(msg, 9, ""),
    instrumentType: jspb.Message.getFieldWithDefault(msg, 10, ""),
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 12, ""),
    operationType: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Operation;
  return proto.tinkoff.public.invest.api.contract.v1.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentOperationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 4:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 5:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.OperationState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantityRest(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstrumentType(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 13:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.OperationType} */ (reader.readEnum());
      msg.setOperationType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentOperationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getQuantityRest();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInstrumentType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getOperationType();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parent_operation_id = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getParentOperationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setParentOperationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string currency = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional MoneyValue payment = 4;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getPayment = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 4));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MoneyValue price = 5;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getPrice = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 5));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional OperationState state = 6;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationState}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getState = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.OperationState} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationState} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int64 quantity = 7;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 quantity_rest = 8;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getQuantityRest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setQuantityRest = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string figi = 9;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string instrument_type = 10;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getInstrumentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setInstrumentType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp date = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.hasDate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string type = 12;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional OperationType operation_type = 13;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.OperationType}
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.getOperationType = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.OperationType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.OperationType} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Operation} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Operation.prototype.setOperationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest;
  return proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalAmountShares: (f = msg.getTotalAmountShares()) && common_pb.MoneyValue.toObject(includeInstance, f),
    totalAmountBonds: (f = msg.getTotalAmountBonds()) && common_pb.MoneyValue.toObject(includeInstance, f),
    totalAmountEtf: (f = msg.getTotalAmountEtf()) && common_pb.MoneyValue.toObject(includeInstance, f),
    totalAmountCurrencies: (f = msg.getTotalAmountCurrencies()) && common_pb.MoneyValue.toObject(includeInstance, f),
    totalAmountFutures: (f = msg.getTotalAmountFutures()) && common_pb.MoneyValue.toObject(includeInstance, f),
    expectedYield: (f = msg.getExpectedYield()) && common_pb.Quotation.toObject(includeInstance, f),
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse;
  return proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setTotalAmountShares(value);
      break;
    case 2:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setTotalAmountBonds(value);
      break;
    case 3:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setTotalAmountEtf(value);
      break;
    case 4:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setTotalAmountCurrencies(value);
      break;
    case 5:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setTotalAmountFutures(value);
      break;
    case 6:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setExpectedYield(value);
      break;
    case 7:
      var value = new proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalAmountShares();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalAmountBonds();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalAmountEtf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalAmountCurrencies();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalAmountFutures();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getExpectedYield();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.serializeBinaryToWriter
    );
  }
};


/**
 * optional MoneyValue total_amount_shares = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getTotalAmountShares = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setTotalAmountShares = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearTotalAmountShares = function() {
  return this.setTotalAmountShares(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.hasTotalAmountShares = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MoneyValue total_amount_bonds = 2;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getTotalAmountBonds = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 2));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setTotalAmountBonds = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearTotalAmountBonds = function() {
  return this.setTotalAmountBonds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.hasTotalAmountBonds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MoneyValue total_amount_etf = 3;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getTotalAmountEtf = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 3));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setTotalAmountEtf = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearTotalAmountEtf = function() {
  return this.setTotalAmountEtf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.hasTotalAmountEtf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MoneyValue total_amount_currencies = 4;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getTotalAmountCurrencies = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 4));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setTotalAmountCurrencies = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearTotalAmountCurrencies = function() {
  return this.setTotalAmountCurrencies(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.hasTotalAmountCurrencies = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MoneyValue total_amount_futures = 5;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getTotalAmountFutures = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 5));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setTotalAmountFutures = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearTotalAmountFutures = function() {
  return this.setTotalAmountFutures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.hasTotalAmountFutures = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Quotation expected_yield = 6;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getExpectedYield = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 6));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setExpectedYield = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearExpectedYield = function() {
  return this.setExpectedYield(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.hasExpectedYield = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated PortfolioPosition positions = 7;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition>}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition, 7));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioResponse.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PositionsRequest;
  return proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.repeatedFields_ = [1,2,3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    moneyList: jspb.Message.toObjectList(msg.getMoneyList(),
    common_pb.MoneyValue.toObject, includeInstance),
    blockedList: jspb.Message.toObjectList(msg.getBlockedList(),
    common_pb.MoneyValue.toObject, includeInstance),
    securitiesList: jspb.Message.toObjectList(msg.getSecuritiesList(),
    proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.toObject, includeInstance),
    limitsLoadingInProgress: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    futuresList: jspb.Message.toObjectList(msg.getFuturesList(),
    proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PositionsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.addMoney(value);
      break;
    case 2:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.addBlocked(value);
      break;
    case 3:
      var value = new proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.deserializeBinaryFromReader);
      msg.addSecurities(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLimitsLoadingInProgress(value);
      break;
    case 5:
      var value = new proto.tinkoff.public.invest.api.contract.v1.PositionsFutures;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.deserializeBinaryFromReader);
      msg.addFutures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoneyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getBlockedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getSecuritiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.serializeBinaryToWriter
    );
  }
  f = message.getLimitsLoadingInProgress();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFuturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MoneyValue money = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.getMoneyList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MoneyValue, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.setMoneyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.addMoney = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.MoneyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.clearMoneyList = function() {
  return this.setMoneyList([]);
};


/**
 * repeated MoneyValue blocked = 2;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.getBlockedList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MoneyValue, 2));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.setBlockedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.addBlocked = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tinkoff.public.invest.api.contract.v1.MoneyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.clearBlockedList = function() {
  return this.setBlockedList([]);
};


/**
 * repeated PositionsSecurities securities = 3;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities>}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.getSecuritiesList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities, 3));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.setSecuritiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.addSecurities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.clearSecuritiesList = function() {
  return this.setSecuritiesList([]);
};


/**
 * optional bool limits_loading_in_progress = 4;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.getLimitsLoadingInProgress = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.setLimitsLoadingInProgress = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated PositionsFutures futures = 5;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures>}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.getFuturesList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.PositionsFutures, 5));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.setFuturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.addFutures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tinkoff.public.invest.api.contract.v1.PositionsFutures, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsResponse.prototype.clearFuturesList = function() {
  return this.setFuturesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest;
  return proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    moneyList: jspb.Message.toObjectList(msg.getMoneyList(),
    common_pb.MoneyValue.toObject, includeInstance),
    blockedList: jspb.Message.toObjectList(msg.getBlockedList(),
    common_pb.MoneyValue.toObject, includeInstance),
    blockedGuaranteeList: jspb.Message.toObjectList(msg.getBlockedGuaranteeList(),
    common_pb.MoneyValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.addMoney(value);
      break;
    case 2:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.addBlocked(value);
      break;
    case 3:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.addBlockedGuarantee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoneyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getBlockedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getBlockedGuaranteeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MoneyValue money = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.getMoneyList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MoneyValue, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.setMoneyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.addMoney = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.MoneyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.clearMoneyList = function() {
  return this.setMoneyList([]);
};


/**
 * repeated MoneyValue blocked = 2;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.getBlockedList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MoneyValue, 2));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.setBlockedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.addBlocked = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tinkoff.public.invest.api.contract.v1.MoneyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.clearBlockedList = function() {
  return this.setBlockedList([]);
};


/**
 * repeated MoneyValue blocked_guarantee = 3;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.getBlockedGuaranteeList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MoneyValue, 3));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.MoneyValue>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.setBlockedGuaranteeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.addBlockedGuarantee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tinkoff.public.invest.api.contract.v1.MoneyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse.prototype.clearBlockedGuaranteeList = function() {
  return this.setBlockedGuaranteeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instrumentType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quantity: (f = msg.getQuantity()) && common_pb.Quotation.toObject(includeInstance, f),
    averagePositionPrice: (f = msg.getAveragePositionPrice()) && common_pb.MoneyValue.toObject(includeInstance, f),
    expectedYield: (f = msg.getExpectedYield()) && common_pb.Quotation.toObject(includeInstance, f),
    currentNkd: (f = msg.getCurrentNkd()) && common_pb.MoneyValue.toObject(includeInstance, f),
    averagePositionPricePt: (f = msg.getAveragePositionPricePt()) && common_pb.Quotation.toObject(includeInstance, f),
    currentPrice: (f = msg.getCurrentPrice()) && common_pb.MoneyValue.toObject(includeInstance, f),
    averagePositionPriceFifo: (f = msg.getAveragePositionPriceFifo()) && common_pb.MoneyValue.toObject(includeInstance, f),
    quantityLots: (f = msg.getQuantityLots()) && common_pb.Quotation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition;
  return proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstrumentType(value);
      break;
    case 3:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setQuantity(value);
      break;
    case 4:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setAveragePositionPrice(value);
      break;
    case 5:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setExpectedYield(value);
      break;
    case 6:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setCurrentNkd(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setAveragePositionPricePt(value);
      break;
    case 8:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setCurrentPrice(value);
      break;
    case 9:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setAveragePositionPriceFifo(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setQuantityLots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstrumentType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getAveragePositionPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getExpectedYield();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getCurrentNkd();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getAveragePositionPricePt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getCurrentPrice();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getAveragePositionPriceFifo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getQuantityLots();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string instrument_type = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getInstrumentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setInstrumentType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Quotation quantity = 3;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getQuantity = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 3));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setQuantity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearQuantity = function() {
  return this.setQuantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MoneyValue average_position_price = 4;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getAveragePositionPrice = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 4));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setAveragePositionPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearAveragePositionPrice = function() {
  return this.setAveragePositionPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasAveragePositionPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Quotation expected_yield = 5;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getExpectedYield = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 5));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setExpectedYield = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearExpectedYield = function() {
  return this.setExpectedYield(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasExpectedYield = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MoneyValue current_nkd = 6;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getCurrentNkd = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 6));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setCurrentNkd = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearCurrentNkd = function() {
  return this.setCurrentNkd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasCurrentNkd = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Quotation average_position_price_pt = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getAveragePositionPricePt = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setAveragePositionPricePt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearAveragePositionPricePt = function() {
  return this.setAveragePositionPricePt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasAveragePositionPricePt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional MoneyValue current_price = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getCurrentPrice = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setCurrentPrice = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearCurrentPrice = function() {
  return this.setCurrentPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasCurrentPrice = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MoneyValue average_position_price_fifo = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getAveragePositionPriceFifo = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setAveragePositionPriceFifo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearAveragePositionPriceFifo = function() {
  return this.setAveragePositionPriceFifo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasAveragePositionPriceFifo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation quantity_lots = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.getQuantityLots = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.setQuantityLots = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.clearQuantityLots = function() {
  return this.setQuantityLots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.PortfolioPosition.prototype.hasQuantityLots = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blocked: jspb.Message.getFieldWithDefault(msg, 2, 0),
    balance: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities;
  return proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlocked(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlocked();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getBalance();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 blocked = 2;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.getBlocked = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 balance = 3;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsSecurities.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blocked: jspb.Message.getFieldWithDefault(msg, 2, 0),
    balance: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.PositionsFutures;
  return proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlocked(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlocked();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getBalance();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 blocked = 2;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.getBlocked = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 balance = 3;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.PositionsFutures} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.PositionsFutures.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  GENERATE_BROKER_REPORT_REQUEST: 1,
  GET_BROKER_REPORT_REQUEST: 2
};

/**
 * @return {proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.PayloadCase}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    generateBrokerReportRequest: (f = msg.getGenerateBrokerReportRequest()) && proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.toObject(includeInstance, f),
    getBrokerReportRequest: (f = msg.getGetBrokerReportRequest()) && proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest;
  return proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.deserializeBinaryFromReader);
      msg.setGenerateBrokerReportRequest(value);
      break;
    case 2:
      var value = new proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.deserializeBinaryFromReader);
      msg.setGetBrokerReportRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGenerateBrokerReportRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetBrokerReportRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional GenerateBrokerReportRequest generate_broker_report_request = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.getGenerateBrokerReportRequest = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.setGenerateBrokerReportRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.clearGenerateBrokerReportRequest = function() {
  return this.setGenerateBrokerReportRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.hasGenerateBrokerReportRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetBrokerReportRequest get_broker_report_request = 2;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.getGetBrokerReportRequest = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest, 2));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.setGetBrokerReportRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.clearGetBrokerReportRequest = function() {
  return this.setGetBrokerReportRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportRequest.prototype.hasGetBrokerReportRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  GENERATE_BROKER_REPORT_RESPONSE: 1,
  GET_BROKER_REPORT_RESPONSE: 2
};

/**
 * @return {proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.PayloadCase}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generateBrokerReportResponse: (f = msg.getGenerateBrokerReportResponse()) && proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.toObject(includeInstance, f),
    getBrokerReportResponse: (f = msg.getGetBrokerReportResponse()) && proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse;
  return proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.deserializeBinaryFromReader);
      msg.setGenerateBrokerReportResponse(value);
      break;
    case 2:
      var value = new proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.deserializeBinaryFromReader);
      msg.setGetBrokerReportResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGenerateBrokerReportResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetBrokerReportResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional GenerateBrokerReportResponse generate_broker_report_response = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.getGenerateBrokerReportResponse = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.setGenerateBrokerReportResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.clearGenerateBrokerReportResponse = function() {
  return this.setGenerateBrokerReportResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.hasGenerateBrokerReportResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetBrokerReportResponse get_broker_report_response = 2;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.getGetBrokerReportResponse = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse, 2));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.setGetBrokerReportResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.clearGetBrokerReportResponse = function() {
  return this.setGetBrokerReportResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReportResponse.prototype.hasGetBrokerReportResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest;
  return proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse;
  return proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest;
  return proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    brokerReportList: jspb.Message.toObjectList(msg.getBrokerReportList(),
    proto.tinkoff.public.invest.api.contract.v1.BrokerReport.toObject, includeInstance),
    itemscount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagescount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse;
  return proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.BrokerReport;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.BrokerReport.deserializeBinaryFromReader);
      msg.addBrokerReport(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setItemscount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagescount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrokerReportList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.BrokerReport.serializeBinaryToWriter
    );
  }
  f = message.getItemscount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPagescount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated BrokerReport broker_report = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.BrokerReport>}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.getBrokerReportList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.BrokerReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.BrokerReport, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.BrokerReport>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.setBrokerReportList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.addBrokerReport = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.BrokerReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.clearBrokerReportList = function() {
  return this.setBrokerReportList([]);
};


/**
 * optional int32 itemsCount = 2;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.getItemscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.setItemscount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pagesCount = 3;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.getPagescount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.setPagescount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 page = 4;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.BrokerReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    figi: jspb.Message.getFieldWithDefault(msg, 3, ""),
    executeSign: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tradeDatetime: (f = msg.getTradeDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    exchange: jspb.Message.getFieldWithDefault(msg, 6, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 8, ""),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 10, ""),
    price: (f = msg.getPrice()) && common_pb.MoneyValue.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 12, 0),
    orderAmount: (f = msg.getOrderAmount()) && common_pb.MoneyValue.toObject(includeInstance, f),
    aciValue: (f = msg.getAciValue()) && common_pb.Quotation.toObject(includeInstance, f),
    totalOrderAmount: (f = msg.getTotalOrderAmount()) && common_pb.MoneyValue.toObject(includeInstance, f),
    brokerCommission: (f = msg.getBrokerCommission()) && common_pb.MoneyValue.toObject(includeInstance, f),
    exchangeCommission: (f = msg.getExchangeCommission()) && common_pb.MoneyValue.toObject(includeInstance, f),
    exchangeClearingCommission: (f = msg.getExchangeClearingCommission()) && common_pb.MoneyValue.toObject(includeInstance, f),
    repoRate: (f = msg.getRepoRate()) && common_pb.Quotation.toObject(includeInstance, f),
    party: jspb.Message.getFieldWithDefault(msg, 20, ""),
    clearValueDate: (f = msg.getClearValueDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    secValueDate: (f = msg.getSecValueDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    brokerStatus: jspb.Message.getFieldWithDefault(msg, 23, ""),
    separateAgreementType: jspb.Message.getFieldWithDefault(msg, 24, ""),
    separateAgreementNumber: jspb.Message.getFieldWithDefault(msg, 25, ""),
    separateAgreementDate: jspb.Message.getFieldWithDefault(msg, 26, ""),
    deliveryType: jspb.Message.getFieldWithDefault(msg, 27, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.BrokerReport;
  return proto.tinkoff.public.invest.api.contract.v1.BrokerReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecuteSign(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTradeDatetime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 11:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 13:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setOrderAmount(value);
      break;
    case 14:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setAciValue(value);
      break;
    case 15:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setTotalOrderAmount(value);
      break;
    case 16:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setBrokerCommission(value);
      break;
    case 17:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setExchangeCommission(value);
      break;
    case 18:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setExchangeClearingCommission(value);
      break;
    case 19:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setRepoRate(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setParty(value);
      break;
    case 21:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClearValueDate(value);
      break;
    case 22:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSecValueDate(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerStatus(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeparateAgreementType(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeparateAgreementNumber(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeparateAgreementDate(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeliveryType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.BrokerReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExecuteSign();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTradeDatetime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getOrderAmount();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getAciValue();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getTotalOrderAmount();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getBrokerCommission();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getExchangeCommission();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getExchangeClearingCommission();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getRepoRate();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getParty();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getClearValueDate();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSecValueDate();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBrokerStatus();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getSeparateAgreementType();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSeparateAgreementNumber();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getSeparateAgreementDate();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getDeliveryType();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string order_id = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string figi = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string execute_sign = 4;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getExecuteSign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setExecuteSign = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp trade_datetime = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getTradeDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setTradeDatetime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearTradeDatetime = function() {
  return this.setTradeDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasTradeDatetime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string exchange = 6;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string class_code = 7;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string direction = 8;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string ticker = 10;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional MoneyValue price = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getPrice = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 quantity = 12;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional MoneyValue order_amount = 13;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getOrderAmount = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 13));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setOrderAmount = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearOrderAmount = function() {
  return this.setOrderAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasOrderAmount = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Quotation aci_value = 14;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getAciValue = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 14));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setAciValue = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearAciValue = function() {
  return this.setAciValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasAciValue = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional MoneyValue total_order_amount = 15;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getTotalOrderAmount = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 15));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setTotalOrderAmount = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearTotalOrderAmount = function() {
  return this.setTotalOrderAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasTotalOrderAmount = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional MoneyValue broker_commission = 16;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getBrokerCommission = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 16));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setBrokerCommission = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearBrokerCommission = function() {
  return this.setBrokerCommission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasBrokerCommission = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional MoneyValue exchange_commission = 17;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getExchangeCommission = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 17));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setExchangeCommission = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearExchangeCommission = function() {
  return this.setExchangeCommission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasExchangeCommission = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional MoneyValue exchange_clearing_commission = 18;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getExchangeClearingCommission = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 18));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setExchangeClearingCommission = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearExchangeClearingCommission = function() {
  return this.setExchangeClearingCommission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasExchangeClearingCommission = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Quotation repo_rate = 19;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getRepoRate = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 19));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setRepoRate = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearRepoRate = function() {
  return this.setRepoRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasRepoRate = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string party = 20;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getParty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setParty = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional google.protobuf.Timestamp clear_value_date = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getClearValueDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 21));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setClearValueDate = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearClearValueDate = function() {
  return this.setClearValueDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasClearValueDate = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional google.protobuf.Timestamp sec_value_date = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getSecValueDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setSecValueDate = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.clearSecValueDate = function() {
  return this.setSecValueDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.hasSecValueDate = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string broker_status = 23;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getBrokerStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setBrokerStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string separate_agreement_type = 24;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getSeparateAgreementType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setSeparateAgreementType = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string separate_agreement_number = 25;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getSeparateAgreementNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setSeparateAgreementNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string separate_agreement_date = 26;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getSeparateAgreementDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setSeparateAgreementDate = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string delivery_type = 27;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.getDeliveryType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BrokerReport} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BrokerReport.prototype.setDeliveryType = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationState = {
  OPERATION_STATE_UNSPECIFIED: 0,
  OPERATION_STATE_EXECUTED: 1,
  OPERATION_STATE_CANCELED: 2
};

/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.OperationType = {
  OPERATION_TYPE_UNSPECIFIED: 0,
  OPERATION_TYPE_INPUT: 1,
  OPERATION_TYPE_BOND_TAX: 2,
  OPERATION_TYPE_OUTPUT_SECURITIES: 3,
  OPERATION_TYPE_OVERNIGHT: 4,
  OPERATION_TYPE_TAX: 5,
  OPERATION_TYPE_BOND_REPAYMENT_FULL: 6,
  OPERATION_TYPE_SELL_CARD: 7,
  OPERATION_TYPE_DIVIDEND_TAX: 8,
  OPERATION_TYPE_OUTPUT: 9,
  OPERATION_TYPE_BOND_REPAYMENT: 10,
  OPERATION_TYPE_TAX_CORRECTION: 11,
  OPERATION_TYPE_SERVICE_FEE: 12,
  OPERATION_TYPE_BENEFIT_TAX: 13,
  OPERATION_TYPE_MARGIN_FEE: 14,
  OPERATION_TYPE_BUY: 15,
  OPERATION_TYPE_BUY_CARD: 16,
  OPERATION_TYPE_INPUT_SECURITIES: 17,
  OPERATION_TYPE_SELL_MARGIN: 18,
  OPERATION_TYPE_BROKER_FEE: 19,
  OPERATION_TYPE_BUY_MARGIN: 20,
  OPERATION_TYPE_DIVIDEND: 21,
  OPERATION_TYPE_SELL: 22,
  OPERATION_TYPE_COUPON: 23,
  OPERATION_TYPE_SUCCESS_FEE: 24,
  OPERATION_TYPE_DIVIDEND_TRANSFER: 25,
  OPERATION_TYPE_ACCRUING_VARMARGIN: 26,
  OPERATION_TYPE_WRITING_OFF_VARMARGIN: 27,
  OPERATION_TYPE_DELIVERY_BUY: 28,
  OPERATION_TYPE_DELIVERY_SELL: 29,
  OPERATION_TYPE_TRACK_MFEE: 30,
  OPERATION_TYPE_TRACK_PFEE: 31,
  OPERATION_TYPE_TAX_PROGRESSIVE: 32,
  OPERATION_TYPE_BOND_TAX_PROGRESSIVE: 33,
  OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE: 34,
  OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE: 35,
  OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE: 36,
  OPERATION_TYPE_TAX_REPO_PROGRESSIVE: 37,
  OPERATION_TYPE_TAX_REPO: 38,
  OPERATION_TYPE_TAX_REPO_HOLD: 39,
  OPERATION_TYPE_TAX_REPO_REFUND: 40,
  OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE: 41,
  OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE: 42,
  OPERATION_TYPE_DIV_EXT: 43
};

goog.object.extend(exports, proto.tinkoff.public.invest.api.contract.v1);
