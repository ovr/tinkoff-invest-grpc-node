// source: instruments.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.AccruedInterest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Bond', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BondResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.BondsResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Currency', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Dividend', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Etf', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.EtfResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.EtfsResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Future', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.FutureResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.FuturesResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Instrument', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.InstrumentIdType', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.InstrumentStatus', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.Share', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.ShareResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.ShareType', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.SharesResponse', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.TradingDay', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.TradingSchedule', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest', null, global);
goog.exportSymbol('proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.TradingSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.displayName = 'proto.tinkoff.public.invest.api.contract.v1.TradingSchedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.TradingDay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.TradingDay.displayName = 'proto.tinkoff.public.invest.api.contract.v1.TradingDay';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.BondResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.BondResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.BondResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.BondsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.BondsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.BondsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.BondsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.EtfResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.EtfResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.EtfResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.EtfsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.EtfsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.FutureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.FutureResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.FutureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.FuturesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.FuturesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.ShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.ShareResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.ShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.SharesResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.SharesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.SharesResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.SharesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Bond = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Bond, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Bond.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Bond';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Currency.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Currency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Etf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Etf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Etf.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Etf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Future = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Future, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Future.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Future';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Share = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Share, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Share.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Share';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.AccruedInterest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.AccruedInterest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Instrument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Instrument.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Instrument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.repeatedFields_, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.displayName = 'proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tinkoff.public.invest.api.contract.v1.Dividend, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tinkoff.public.invest.api.contract.v1.Dividend.displayName = 'proto.tinkoff.public.invest.api.contract.v1.Dividend';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchange: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest;
  return proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string exchange = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchangesList: jspb.Message.toObjectList(msg.getExchangesList(),
    proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse;
  return proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.TradingSchedule;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.deserializeBinaryFromReader);
      msg.addExchanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TradingSchedule exchanges = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule>}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.prototype.getExchangesList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.TradingSchedule, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.prototype.setExchangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.prototype.addExchanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.TradingSchedule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedulesResponse.prototype.clearExchangesList = function() {
  return this.setExchangesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchange: jspb.Message.getFieldWithDefault(msg, 1, ""),
    daysList: jspb.Message.toObjectList(msg.getDaysList(),
    proto.tinkoff.public.invest.api.contract.v1.TradingDay.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.TradingSchedule;
  return proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 2:
      var value = new proto.tinkoff.public.invest.api.contract.v1.TradingDay;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.TradingDay.deserializeBinaryFromReader);
      msg.addDays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tinkoff.public.invest.api.contract.v1.TradingDay.serializeBinaryToWriter
    );
  }
};


/**
 * optional string exchange = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TradingDay days = 2;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.TradingDay>}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.getDaysList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.TradingDay>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.TradingDay, 2));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.TradingDay>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.setDaysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingDay=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.addDays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tinkoff.public.invest.api.contract.v1.TradingDay, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingSchedule} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingSchedule.prototype.clearDaysList = function() {
  return this.setDaysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.TradingDay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isTradingDay: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    marketOrderStartTime: (f = msg.getMarketOrderStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    marketOrderEndTime: (f = msg.getMarketOrderEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.TradingDay;
  return proto.tinkoff.public.invest.api.contract.v1.TradingDay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTradingDay(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMarketOrderStartTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMarketOrderEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.TradingDay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsTradingDay();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMarketOrderStartTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMarketOrderEndTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool is_trading_day = 2;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.getIsTradingDay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.setIsTradingDay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp market_order_start_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.getMarketOrderStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.setMarketOrderStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.clearMarketOrderStartTime = function() {
  return this.setMarketOrderStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.hasMarketOrderStartTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp market_order_end_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.getMarketOrderEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.setMarketOrderEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.TradingDay} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.clearMarketOrderEndTime = function() {
  return this.setMarketOrderEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.TradingDay.prototype.hasMarketOrderEndTime = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest;
  return proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.InstrumentIdType} */ (reader.readEnum());
      msg.setIdType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional InstrumentIdType id_type = 1;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentIdType}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.getIdType = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.InstrumentIdType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentIdType} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.setIdType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string class_code = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrumentStatus: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest;
  return proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.InstrumentStatus} */ (reader.readEnum());
      msg.setInstrumentStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional InstrumentStatus instrument_status = 1;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.prototype.getInstrumentStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.InstrumentStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentsRequest.prototype.setInstrumentStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.BondResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BondResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.tinkoff.public.invest.api.contract.v1.Bond.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.BondResponse;
  return proto.tinkoff.public.invest.api.contract.v1.BondResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BondResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Bond;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Bond.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.BondResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BondResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Bond.serializeBinaryToWriter
    );
  }
};


/**
 * optional Bond instrument = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Bond}
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.prototype.getInstrument = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Bond} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Bond, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Bond|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BondResponse.prototype.setInstrument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.prototype.clearInstrument = function() {
  return this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.BondResponse.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.BondsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrumentsList: jspb.Message.toObjectList(msg.getInstrumentsList(),
    proto.tinkoff.public.invest.api.contract.v1.Bond.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.BondsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.BondsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Bond;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Bond.deserializeBinaryFromReader);
      msg.addInstruments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.BondsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Bond.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Bond instruments = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Bond>}
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.prototype.getInstrumentsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Bond>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Bond, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Bond>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.prototype.setInstrumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Bond=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond}
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.prototype.addInstruments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Bond, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.BondsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.BondsResponse.prototype.clearInstrumentsList = function() {
  return this.setInstrumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.tinkoff.public.invest.api.contract.v1.Currency.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse;
  return proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Currency;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Currency.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Currency.serializeBinaryToWriter
    );
  }
};


/**
 * optional Currency instrument = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Currency}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.prototype.getInstrument = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Currency} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Currency, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Currency|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.prototype.setInstrument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.prototype.clearInstrument = function() {
  return this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrencyResponse.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrumentsList: jspb.Message.toObjectList(msg.getInstrumentsList(),
    proto.tinkoff.public.invest.api.contract.v1.Currency.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse;
  return proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Currency;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Currency.deserializeBinaryFromReader);
      msg.addInstruments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Currency.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Currency instruments = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Currency>}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.prototype.getInstrumentsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Currency>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Currency, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Currency>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.prototype.setInstrumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Currency=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency}
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.prototype.addInstruments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Currency, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.CurrenciesResponse.prototype.clearInstrumentsList = function() {
  return this.setInstrumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.EtfResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.tinkoff.public.invest.api.contract.v1.Etf.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.EtfResponse;
  return proto.tinkoff.public.invest.api.contract.v1.EtfResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Etf;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Etf.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.EtfResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Etf.serializeBinaryToWriter
    );
  }
};


/**
 * optional Etf instrument = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Etf}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.prototype.getInstrument = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Etf} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Etf, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Etf|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.prototype.setInstrument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.prototype.clearInstrument = function() {
  return this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfResponse.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrumentsList: jspb.Message.toObjectList(msg.getInstrumentsList(),
    proto.tinkoff.public.invest.api.contract.v1.Etf.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.EtfsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Etf;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Etf.deserializeBinaryFromReader);
      msg.addInstruments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Etf.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Etf instruments = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Etf>}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.prototype.getInstrumentsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Etf>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Etf, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Etf>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.prototype.setInstrumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Etf=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf}
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.prototype.addInstruments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Etf, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.EtfsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.EtfsResponse.prototype.clearInstrumentsList = function() {
  return this.setInstrumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.FutureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.tinkoff.public.invest.api.contract.v1.Future.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.FutureResponse;
  return proto.tinkoff.public.invest.api.contract.v1.FutureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Future;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Future.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.FutureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Future.serializeBinaryToWriter
    );
  }
};


/**
 * optional Future instrument = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Future}
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.prototype.getInstrument = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Future} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Future, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Future|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.prototype.setInstrument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FutureResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.prototype.clearInstrument = function() {
  return this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.FutureResponse.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrumentsList: jspb.Message.toObjectList(msg.getInstrumentsList(),
    proto.tinkoff.public.invest.api.contract.v1.Future.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.FuturesResponse;
  return proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Future;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Future.deserializeBinaryFromReader);
      msg.addInstruments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Future.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Future instruments = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Future>}
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.prototype.getInstrumentsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Future>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Future, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Future>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.prototype.setInstrumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Future=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future}
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.prototype.addInstruments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Future, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.FuturesResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.FuturesResponse.prototype.clearInstrumentsList = function() {
  return this.setInstrumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.ShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.tinkoff.public.invest.api.contract.v1.Share.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.ShareResponse;
  return proto.tinkoff.public.invest.api.contract.v1.ShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Share;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Share.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.ShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Share.serializeBinaryToWriter
    );
  }
};


/**
 * optional Share instrument = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Share}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.prototype.getInstrument = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Share} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Share, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Share|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.prototype.setInstrument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.ShareResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.prototype.clearInstrument = function() {
  return this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareResponse.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.SharesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrumentsList: jspb.Message.toObjectList(msg.getInstrumentsList(),
    proto.tinkoff.public.invest.api.contract.v1.Share.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.SharesResponse;
  return proto.tinkoff.public.invest.api.contract.v1.SharesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Share;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Share.deserializeBinaryFromReader);
      msg.addInstruments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.SharesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Share.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Share instruments = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Share>}
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.prototype.getInstrumentsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Share>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Share, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Share>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.prototype.setInstrumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Share=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share}
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.prototype.addInstruments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Share, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SharesResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.SharesResponse.prototype.clearInstrumentsList = function() {
  return this.setInstrumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Bond.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Bond} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 5, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    klong: (f = msg.getKlong()) && common_pb.Quotation.toObject(includeInstance, f),
    kshort: (f = msg.getKshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlong: (f = msg.getDlong()) && common_pb.Quotation.toObject(includeInstance, f),
    dshort: (f = msg.getDshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlongMin: (f = msg.getDlongMin()) && common_pb.Quotation.toObject(includeInstance, f),
    dshortMin: (f = msg.getDshortMin()) && common_pb.Quotation.toObject(includeInstance, f),
    shortEnabledFlag: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    name: jspb.Message.getFieldWithDefault(msg, 15, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 16, ""),
    couponQuantityPerYear: jspb.Message.getFieldWithDefault(msg, 17, 0),
    maturityDate: (f = msg.getMaturityDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nominal: (f = msg.getNominal()) && common_pb.MoneyValue.toObject(includeInstance, f),
    stateRegDate: (f = msg.getStateRegDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    placementDate: (f = msg.getPlacementDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    placementPrice: (f = msg.getPlacementPrice()) && common_pb.MoneyValue.toObject(includeInstance, f),
    aciValue: (f = msg.getAciValue()) && common_pb.MoneyValue.toObject(includeInstance, f),
    countryOfRisk: jspb.Message.getFieldWithDefault(msg, 25, ""),
    countryOfRiskName: jspb.Message.getFieldWithDefault(msg, 26, ""),
    sector: jspb.Message.getFieldWithDefault(msg, 27, ""),
    issueKind: jspb.Message.getFieldWithDefault(msg, 28, ""),
    issueSize: jspb.Message.getFieldWithDefault(msg, 29, 0),
    issueSizePlan: jspb.Message.getFieldWithDefault(msg, 30, 0),
    tradingStatus: jspb.Message.getFieldWithDefault(msg, 31, 0),
    otcFlag: jspb.Message.getBooleanFieldWithDefault(msg, 32, false),
    buyAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 33, false),
    sellAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 34, false),
    floatingCouponFlag: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    perpetualFlag: jspb.Message.getBooleanFieldWithDefault(msg, 36, false),
    amortizationFlag: jspb.Message.getBooleanFieldWithDefault(msg, 37, false),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    apiTradeAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 39, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Bond;
  return proto.tinkoff.public.invest.api.contract.v1.Bond.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Bond} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKlong(value);
      break;
    case 8:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKshort(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlong(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshort(value);
      break;
    case 11:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlongMin(value);
      break;
    case 12:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshortMin(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortEnabledFlag(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCouponQuantityPerYear(value);
      break;
    case 18:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setMaturityDate(value);
      break;
    case 19:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setNominal(value);
      break;
    case 21:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStateRegDate(value);
      break;
    case 22:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPlacementDate(value);
      break;
    case 23:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setPlacementPrice(value);
      break;
    case 24:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setAciValue(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRisk(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRiskName(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssueKind(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIssueSize(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIssueSizePlan(value);
      break;
    case 31:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (reader.readEnum());
      msg.setTradingStatus(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOtcFlag(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyAvailableFlag(value);
      break;
    case 34:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellAvailableFlag(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFloatingCouponFlag(value);
      break;
    case 36:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPerpetualFlag(value);
      break;
    case 37:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmortizationFlag(value);
      break;
    case 38:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 39:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApiTradeAvailableFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Bond.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Bond} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLot();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKlong();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getKshort();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlong();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshort();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlongMin();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshortMin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getShortEnabledFlag();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCouponQuantityPerYear();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getMaturityDate();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNominal();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getStateRegDate();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlacementDate();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPlacementPrice();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getAciValue();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getCountryOfRisk();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getCountryOfRiskName();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getIssueKind();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getIssueSize();
  if (f !== 0) {
    writer.writeInt64(
      29,
      f
    );
  }
  f = message.getIssueSizePlan();
  if (f !== 0) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = message.getTradingStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      31,
      f
    );
  }
  f = message.getOtcFlag();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
  f = message.getBuyAvailableFlag();
  if (f) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getSellAvailableFlag();
  if (f) {
    writer.writeBool(
      34,
      f
    );
  }
  f = message.getFloatingCouponFlag();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getPerpetualFlag();
  if (f) {
    writer.writeBool(
      36,
      f
    );
  }
  f = message.getAmortizationFlag();
  if (f) {
    writer.writeBool(
      37,
      f
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getApiTradeAvailableFlag();
  if (f) {
    writer.writeBool(
      39,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_code = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string isin = 4;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 lot = 5;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getLot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setLot = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Quotation klong = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getKlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setKlong = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearKlong = function() {
  return this.setKlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasKlong = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Quotation kshort = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getKshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setKshort = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearKshort = function() {
  return this.setKshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasKshort = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation dlong = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getDlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setDlong = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearDlong = function() {
  return this.setDlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasDlong = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation dshort = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getDshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setDshort = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearDshort = function() {
  return this.setDshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasDshort = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Quotation dlong_min = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getDlongMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setDlongMin = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearDlongMin = function() {
  return this.setDlongMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasDlongMin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Quotation dshort_min = 12;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getDshortMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 12));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setDshortMin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearDshortMin = function() {
  return this.setDshortMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasDshortMin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool short_enabled_flag = 13;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getShortEnabledFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setShortEnabledFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string name = 15;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string exchange = 16;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int32 coupon_quantity_per_year = 17;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getCouponQuantityPerYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setCouponQuantityPerYear = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional google.protobuf.Timestamp maturity_date = 18;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getMaturityDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 18));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setMaturityDate = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearMaturityDate = function() {
  return this.setMaturityDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasMaturityDate = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional MoneyValue nominal = 19;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getNominal = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 19));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setNominal = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearNominal = function() {
  return this.setNominal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasNominal = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Timestamp state_reg_date = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getStateRegDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 21));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setStateRegDate = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearStateRegDate = function() {
  return this.setStateRegDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasStateRegDate = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional google.protobuf.Timestamp placement_date = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getPlacementDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setPlacementDate = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearPlacementDate = function() {
  return this.setPlacementDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasPlacementDate = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional MoneyValue placement_price = 23;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getPlacementPrice = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 23));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setPlacementPrice = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearPlacementPrice = function() {
  return this.setPlacementPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasPlacementPrice = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional MoneyValue aci_value = 24;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getAciValue = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 24));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setAciValue = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearAciValue = function() {
  return this.setAciValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasAciValue = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string country_of_risk = 25;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getCountryOfRisk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setCountryOfRisk = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string country_of_risk_name = 26;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getCountryOfRiskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setCountryOfRiskName = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string sector = 27;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string issue_kind = 28;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getIssueKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setIssueKind = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int64 issue_size = 29;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getIssueSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setIssueSize = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional int64 issue_size_plan = 30;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getIssueSizePlan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setIssueSizePlan = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional SecurityTradingStatus trading_status = 31;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getTradingStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setTradingStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 31, value);
};


/**
 * optional bool otc_flag = 32;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getOtcFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setOtcFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};


/**
 * optional bool buy_available_flag = 33;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getBuyAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setBuyAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 33, value);
};


/**
 * optional bool sell_available_flag = 34;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getSellAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 34, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setSellAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 34, value);
};


/**
 * optional bool floating_coupon_flag = 35;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getFloatingCouponFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setFloatingCouponFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * optional bool perpetual_flag = 36;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getPerpetualFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 36, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setPerpetualFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 36, value);
};


/**
 * optional bool amortization_flag = 37;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getAmortizationFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 37, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setAmortizationFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 37, value);
};


/**
 * optional Quotation min_price_increment = 38;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 38));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional bool api_trade_available_flag = 39;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.getApiTradeAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 39, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Bond} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Bond.prototype.setApiTradeAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 39, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Currency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 5, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    klong: (f = msg.getKlong()) && common_pb.Quotation.toObject(includeInstance, f),
    kshort: (f = msg.getKshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlong: (f = msg.getDlong()) && common_pb.Quotation.toObject(includeInstance, f),
    dshort: (f = msg.getDshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlongMin: (f = msg.getDlongMin()) && common_pb.Quotation.toObject(includeInstance, f),
    dshortMin: (f = msg.getDshortMin()) && common_pb.Quotation.toObject(includeInstance, f),
    shortEnabledFlag: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    name: jspb.Message.getFieldWithDefault(msg, 15, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 16, ""),
    nominal: (f = msg.getNominal()) && common_pb.MoneyValue.toObject(includeInstance, f),
    countryOfRisk: jspb.Message.getFieldWithDefault(msg, 18, ""),
    countryOfRiskName: jspb.Message.getFieldWithDefault(msg, 19, ""),
    tradingStatus: jspb.Message.getFieldWithDefault(msg, 20, 0),
    otcFlag: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    buyAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    sellAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    isoCurrencyName: jspb.Message.getFieldWithDefault(msg, 24, ""),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    apiTradeAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 26, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Currency;
  return proto.tinkoff.public.invest.api.contract.v1.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKlong(value);
      break;
    case 8:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKshort(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlong(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshort(value);
      break;
    case 11:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlongMin(value);
      break;
    case 12:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshortMin(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortEnabledFlag(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 17:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setNominal(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRisk(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRiskName(value);
      break;
    case 20:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (reader.readEnum());
      msg.setTradingStatus(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOtcFlag(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyAvailableFlag(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellAvailableFlag(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsoCurrencyName(value);
      break;
    case 25:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApiTradeAvailableFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Currency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Currency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLot();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKlong();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getKshort();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlong();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshort();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlongMin();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshortMin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getShortEnabledFlag();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNominal();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getCountryOfRisk();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getCountryOfRiskName();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getTradingStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getOtcFlag();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getBuyAvailableFlag();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getSellAvailableFlag();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getIsoCurrencyName();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getApiTradeAvailableFlag();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_code = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string isin = 4;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 lot = 5;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getLot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setLot = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Quotation klong = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getKlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setKlong = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearKlong = function() {
  return this.setKlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasKlong = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Quotation kshort = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getKshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setKshort = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearKshort = function() {
  return this.setKshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasKshort = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation dlong = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getDlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setDlong = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearDlong = function() {
  return this.setDlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasDlong = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation dshort = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getDshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setDshort = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearDshort = function() {
  return this.setDshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasDshort = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Quotation dlong_min = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getDlongMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setDlongMin = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearDlongMin = function() {
  return this.setDlongMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasDlongMin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Quotation dshort_min = 12;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getDshortMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 12));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setDshortMin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearDshortMin = function() {
  return this.setDshortMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasDshortMin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool short_enabled_flag = 13;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getShortEnabledFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setShortEnabledFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string name = 15;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string exchange = 16;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional MoneyValue nominal = 17;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getNominal = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 17));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setNominal = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearNominal = function() {
  return this.setNominal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasNominal = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string country_of_risk = 18;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getCountryOfRisk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setCountryOfRisk = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string country_of_risk_name = 19;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getCountryOfRiskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setCountryOfRiskName = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional SecurityTradingStatus trading_status = 20;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getTradingStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setTradingStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};


/**
 * optional bool otc_flag = 21;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getOtcFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setOtcFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool buy_available_flag = 22;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getBuyAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setBuyAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool sell_available_flag = 23;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getSellAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setSellAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional string iso_currency_name = 24;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getIsoCurrencyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setIsoCurrencyName = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional Quotation min_price_increment = 25;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 25));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool api_trade_available_flag = 26;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.getApiTradeAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Currency} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Currency.prototype.setApiTradeAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Etf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Etf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 5, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    klong: (f = msg.getKlong()) && common_pb.Quotation.toObject(includeInstance, f),
    kshort: (f = msg.getKshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlong: (f = msg.getDlong()) && common_pb.Quotation.toObject(includeInstance, f),
    dshort: (f = msg.getDshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlongMin: (f = msg.getDlongMin()) && common_pb.Quotation.toObject(includeInstance, f),
    dshortMin: (f = msg.getDshortMin()) && common_pb.Quotation.toObject(includeInstance, f),
    shortEnabledFlag: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    name: jspb.Message.getFieldWithDefault(msg, 15, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 16, ""),
    fixedCommission: (f = msg.getFixedCommission()) && common_pb.Quotation.toObject(includeInstance, f),
    focusType: jspb.Message.getFieldWithDefault(msg, 18, ""),
    releasedDate: (f = msg.getReleasedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    numShares: (f = msg.getNumShares()) && common_pb.Quotation.toObject(includeInstance, f),
    countryOfRisk: jspb.Message.getFieldWithDefault(msg, 21, ""),
    countryOfRiskName: jspb.Message.getFieldWithDefault(msg, 22, ""),
    sector: jspb.Message.getFieldWithDefault(msg, 23, ""),
    rebalancingFreq: jspb.Message.getFieldWithDefault(msg, 24, ""),
    tradingStatus: jspb.Message.getFieldWithDefault(msg, 25, 0),
    otcFlag: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    buyAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    sellAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    apiTradeAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 30, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Etf;
  return proto.tinkoff.public.invest.api.contract.v1.Etf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Etf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKlong(value);
      break;
    case 8:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKshort(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlong(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshort(value);
      break;
    case 11:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlongMin(value);
      break;
    case 12:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshortMin(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortEnabledFlag(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 17:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setFixedCommission(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setFocusType(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReleasedDate(value);
      break;
    case 20:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setNumShares(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRisk(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRiskName(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setRebalancingFreq(value);
      break;
    case 25:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (reader.readEnum());
      msg.setTradingStatus(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOtcFlag(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyAvailableFlag(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellAvailableFlag(value);
      break;
    case 29:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApiTradeAvailableFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Etf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Etf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLot();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKlong();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getKshort();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlong();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshort();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlongMin();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshortMin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getShortEnabledFlag();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getFixedCommission();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getFocusType();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getReleasedDate();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNumShares();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getCountryOfRisk();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCountryOfRiskName();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getRebalancingFreq();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getTradingStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getOtcFlag();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getBuyAvailableFlag();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getSellAvailableFlag();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getApiTradeAvailableFlag();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_code = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string isin = 4;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 lot = 5;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getLot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setLot = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Quotation klong = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getKlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setKlong = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearKlong = function() {
  return this.setKlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasKlong = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Quotation kshort = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getKshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setKshort = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearKshort = function() {
  return this.setKshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasKshort = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation dlong = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getDlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setDlong = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearDlong = function() {
  return this.setDlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasDlong = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation dshort = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getDshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setDshort = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearDshort = function() {
  return this.setDshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasDshort = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Quotation dlong_min = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getDlongMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setDlongMin = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearDlongMin = function() {
  return this.setDlongMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasDlongMin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Quotation dshort_min = 12;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getDshortMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 12));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setDshortMin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearDshortMin = function() {
  return this.setDshortMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasDshortMin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool short_enabled_flag = 13;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getShortEnabledFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setShortEnabledFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string name = 15;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string exchange = 16;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional Quotation fixed_commission = 17;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getFixedCommission = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 17));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setFixedCommission = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearFixedCommission = function() {
  return this.setFixedCommission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasFixedCommission = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string focus_type = 18;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getFocusType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setFocusType = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional google.protobuf.Timestamp released_date = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getReleasedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setReleasedDate = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearReleasedDate = function() {
  return this.setReleasedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasReleasedDate = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Quotation num_shares = 20;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getNumShares = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 20));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setNumShares = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearNumShares = function() {
  return this.setNumShares(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasNumShares = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string country_of_risk = 21;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getCountryOfRisk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setCountryOfRisk = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string country_of_risk_name = 22;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getCountryOfRiskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setCountryOfRiskName = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string sector = 23;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string rebalancing_freq = 24;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getRebalancingFreq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setRebalancingFreq = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional SecurityTradingStatus trading_status = 25;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getTradingStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setTradingStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional bool otc_flag = 26;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getOtcFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setOtcFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool buy_available_flag = 27;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getBuyAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setBuyAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional bool sell_available_flag = 28;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getSellAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setSellAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional Quotation min_price_increment = 29;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 29));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool api_trade_available_flag = 30;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.getApiTradeAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Etf} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Etf.prototype.setApiTradeAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Future.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Future} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Future.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 4, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    klong: (f = msg.getKlong()) && common_pb.Quotation.toObject(includeInstance, f),
    kshort: (f = msg.getKshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlong: (f = msg.getDlong()) && common_pb.Quotation.toObject(includeInstance, f),
    dshort: (f = msg.getDshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlongMin: (f = msg.getDlongMin()) && common_pb.Quotation.toObject(includeInstance, f),
    dshortMin: (f = msg.getDshortMin()) && common_pb.Quotation.toObject(includeInstance, f),
    shortEnabledFlag: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    name: jspb.Message.getFieldWithDefault(msg, 13, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 14, ""),
    firstTradeDate: (f = msg.getFirstTradeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastTradeDate: (f = msg.getLastTradeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    futuresType: jspb.Message.getFieldWithDefault(msg, 17, ""),
    assetType: jspb.Message.getFieldWithDefault(msg, 18, ""),
    basicAsset: jspb.Message.getFieldWithDefault(msg, 19, ""),
    basicAssetSize: (f = msg.getBasicAssetSize()) && common_pb.Quotation.toObject(includeInstance, f),
    countryOfRisk: jspb.Message.getFieldWithDefault(msg, 21, ""),
    countryOfRiskName: jspb.Message.getFieldWithDefault(msg, 22, ""),
    sector: jspb.Message.getFieldWithDefault(msg, 23, ""),
    expirationDate: (f = msg.getExpirationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    tradingStatus: jspb.Message.getFieldWithDefault(msg, 25, 0),
    otcFlag: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    buyAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    sellAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    apiTradeAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 30, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Future;
  return proto.tinkoff.public.invest.api.contract.v1.Future.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Future} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLot(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKlong(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKshort(value);
      break;
    case 8:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlong(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshort(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlongMin(value);
      break;
    case 11:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshortMin(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortEnabledFlag(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstTradeDate(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastTradeDate(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setFuturesType(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetType(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setBasicAsset(value);
      break;
    case 20:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setBasicAssetSize(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRisk(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRiskName(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 24:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationDate(value);
      break;
    case 25:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (reader.readEnum());
      msg.setTradingStatus(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOtcFlag(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyAvailableFlag(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellAvailableFlag(value);
      break;
    case 29:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApiTradeAvailableFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Future.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Future} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Future.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLot();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKlong();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getKshort();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlong();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshort();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlongMin();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshortMin();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getShortEnabledFlag();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getFirstTradeDate();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastTradeDate();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFuturesType();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAssetType();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getBasicAsset();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getBasicAssetSize();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getCountryOfRisk();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCountryOfRiskName();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getExpirationDate();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTradingStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getOtcFlag();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getBuyAvailableFlag();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getSellAvailableFlag();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getApiTradeAvailableFlag();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_code = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 lot = 4;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getLot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setLot = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Quotation klong = 6;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getKlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 6));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setKlong = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearKlong = function() {
  return this.setKlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasKlong = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Quotation kshort = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getKshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setKshort = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearKshort = function() {
  return this.setKshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasKshort = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Quotation dlong = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getDlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setDlong = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearDlong = function() {
  return this.setDlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasDlong = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation dshort = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getDshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setDshort = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearDshort = function() {
  return this.setDshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasDshort = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation dlong_min = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getDlongMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setDlongMin = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearDlongMin = function() {
  return this.setDlongMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasDlongMin = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Quotation dshort_min = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getDshortMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setDshortMin = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearDshortMin = function() {
  return this.setDshortMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasDshortMin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool short_enabled_flag = 12;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getShortEnabledFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setShortEnabledFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string name = 13;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string exchange = 14;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp first_trade_date = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getFirstTradeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setFirstTradeDate = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearFirstTradeDate = function() {
  return this.setFirstTradeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasFirstTradeDate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp last_trade_date = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getLastTradeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setLastTradeDate = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearLastTradeDate = function() {
  return this.setLastTradeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasLastTradeDate = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string futures_type = 17;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getFuturesType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setFuturesType = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string asset_type = 18;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getAssetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setAssetType = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string basic_asset = 19;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getBasicAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setBasicAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional Quotation basic_asset_size = 20;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getBasicAssetSize = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 20));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setBasicAssetSize = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearBasicAssetSize = function() {
  return this.setBasicAssetSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasBasicAssetSize = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string country_of_risk = 21;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getCountryOfRisk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setCountryOfRisk = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string country_of_risk_name = 22;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getCountryOfRiskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setCountryOfRiskName = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string sector = 23;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional google.protobuf.Timestamp expiration_date = 24;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getExpirationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 24));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setExpirationDate = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearExpirationDate = function() {
  return this.setExpirationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasExpirationDate = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional SecurityTradingStatus trading_status = 25;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getTradingStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setTradingStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional bool otc_flag = 26;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getOtcFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setOtcFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool buy_available_flag = 27;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getBuyAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setBuyAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional bool sell_available_flag = 28;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getSellAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setSellAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional Quotation min_price_increment = 29;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 29));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool api_trade_available_flag = 30;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.getApiTradeAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Future} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Future.prototype.setApiTradeAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Share.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Share} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Share.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 5, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    klong: (f = msg.getKlong()) && common_pb.Quotation.toObject(includeInstance, f),
    kshort: (f = msg.getKshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlong: (f = msg.getDlong()) && common_pb.Quotation.toObject(includeInstance, f),
    dshort: (f = msg.getDshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlongMin: (f = msg.getDlongMin()) && common_pb.Quotation.toObject(includeInstance, f),
    dshortMin: (f = msg.getDshortMin()) && common_pb.Quotation.toObject(includeInstance, f),
    shortEnabledFlag: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    name: jspb.Message.getFieldWithDefault(msg, 15, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 16, ""),
    ipoDate: (f = msg.getIpoDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    issueSize: jspb.Message.getFieldWithDefault(msg, 18, 0),
    countryOfRisk: jspb.Message.getFieldWithDefault(msg, 19, ""),
    countryOfRiskName: jspb.Message.getFieldWithDefault(msg, 20, ""),
    sector: jspb.Message.getFieldWithDefault(msg, 21, ""),
    issueSizePlan: jspb.Message.getFieldWithDefault(msg, 22, 0),
    nominal: (f = msg.getNominal()) && common_pb.MoneyValue.toObject(includeInstance, f),
    tradingStatus: jspb.Message.getFieldWithDefault(msg, 25, 0),
    otcFlag: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    buyAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    sellAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    divYieldFlag: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    shareType: jspb.Message.getFieldWithDefault(msg, 30, 0),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    apiTradeAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 32, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Share;
  return proto.tinkoff.public.invest.api.contract.v1.Share.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Share} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKlong(value);
      break;
    case 8:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKshort(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlong(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshort(value);
      break;
    case 11:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlongMin(value);
      break;
    case 12:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshortMin(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortEnabledFlag(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setIpoDate(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIssueSize(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRisk(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRiskName(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIssueSizePlan(value);
      break;
    case 23:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setNominal(value);
      break;
    case 25:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (reader.readEnum());
      msg.setTradingStatus(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOtcFlag(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyAvailableFlag(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellAvailableFlag(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDivYieldFlag(value);
      break;
    case 30:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.ShareType} */ (reader.readEnum());
      msg.setShareType(value);
      break;
    case 31:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApiTradeAvailableFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Share.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Share} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Share.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLot();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKlong();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getKshort();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlong();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshort();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlongMin();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshortMin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getShortEnabledFlag();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIpoDate();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIssueSize();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getCountryOfRisk();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCountryOfRiskName();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getIssueSizePlan();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getNominal();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getTradingStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getOtcFlag();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getBuyAvailableFlag();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getSellAvailableFlag();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getDivYieldFlag();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getShareType();
  if (f !== 0.0) {
    writer.writeEnum(
      30,
      f
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getApiTradeAvailableFlag();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_code = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string isin = 4;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 lot = 5;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getLot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setLot = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Quotation klong = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getKlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setKlong = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearKlong = function() {
  return this.setKlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasKlong = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Quotation kshort = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getKshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setKshort = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearKshort = function() {
  return this.setKshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasKshort = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation dlong = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getDlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setDlong = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearDlong = function() {
  return this.setDlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasDlong = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation dshort = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getDshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setDshort = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearDshort = function() {
  return this.setDshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasDshort = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Quotation dlong_min = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getDlongMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setDlongMin = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearDlongMin = function() {
  return this.setDlongMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasDlongMin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Quotation dshort_min = 12;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getDshortMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 12));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setDshortMin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearDshortMin = function() {
  return this.setDshortMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasDshortMin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool short_enabled_flag = 13;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getShortEnabledFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setShortEnabledFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string name = 15;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string exchange = 16;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional google.protobuf.Timestamp ipo_date = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getIpoDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setIpoDate = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearIpoDate = function() {
  return this.setIpoDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasIpoDate = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 issue_size = 18;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getIssueSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setIssueSize = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string country_of_risk = 19;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getCountryOfRisk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setCountryOfRisk = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string country_of_risk_name = 20;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getCountryOfRiskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setCountryOfRiskName = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string sector = 21;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int64 issue_size_plan = 22;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getIssueSizePlan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setIssueSizePlan = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional MoneyValue nominal = 23;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getNominal = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 23));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setNominal = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearNominal = function() {
  return this.setNominal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasNominal = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional SecurityTradingStatus trading_status = 25;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getTradingStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setTradingStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional bool otc_flag = 26;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getOtcFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setOtcFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool buy_available_flag = 27;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getBuyAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setBuyAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional bool sell_available_flag = 28;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getSellAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setSellAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional bool div_yield_flag = 29;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getDivYieldFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setDivYieldFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional ShareType share_type = 30;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.ShareType}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getShareType = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.ShareType} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.ShareType} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setShareType = function(value) {
  return jspb.Message.setProto3EnumField(this, 30, value);
};


/**
 * optional Quotation min_price_increment = 31;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 31));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional bool api_trade_available_flag = 32;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.getApiTradeAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Share} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Share.prototype.setApiTradeAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest;
  return proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accruedInterestsList: jspb.Message.toObjectList(msg.getAccruedInterestsList(),
    proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.AccruedInterest;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.deserializeBinaryFromReader);
      msg.addAccruedInterests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccruedInterestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccruedInterest accrued_interests = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest>}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.prototype.getAccruedInterestsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.AccruedInterest, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.prototype.setAccruedInterestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.prototype.addAccruedInterests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.AccruedInterest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetAccruedInterestsResponse.prototype.clearAccruedInterestsList = function() {
  return this.setAccruedInterestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    value: (f = msg.getValue()) && common_pb.Quotation.toObject(includeInstance, f),
    valuePercent: (f = msg.getValuePercent()) && common_pb.Quotation.toObject(includeInstance, f),
    nominal: (f = msg.getNominal()) && common_pb.Quotation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.AccruedInterest;
  return proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 3:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setValuePercent(value);
      break;
    case 4:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setNominal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getValuePercent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getNominal();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quotation value = 2;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.getValue = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 2));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Quotation value_percent = 3;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.getValuePercent = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 3));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.setValuePercent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.clearValuePercent = function() {
  return this.setValuePercent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.hasValuePercent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Quotation nominal = 4;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.getNominal = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 4));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.setNominal = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.AccruedInterest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.clearNominal = function() {
  return this.setNominal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.AccruedInterest.prototype.hasNominal = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest;
  return proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginRequest.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    initialMarginOnBuy: (f = msg.getInitialMarginOnBuy()) && common_pb.MoneyValue.toObject(includeInstance, f),
    initialMarginOnSell: (f = msg.getInitialMarginOnSell()) && common_pb.MoneyValue.toObject(includeInstance, f),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    minPriceIncrementAmount: (f = msg.getMinPriceIncrementAmount()) && common_pb.Quotation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse;
  return proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setInitialMarginOnBuy(value);
      break;
    case 2:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setInitialMarginOnSell(value);
      break;
    case 3:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 4:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrementAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitialMarginOnBuy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getInitialMarginOnSell();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getMinPriceIncrementAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
};


/**
 * optional MoneyValue initial_margin_on_buy = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.getInitialMarginOnBuy = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.setInitialMarginOnBuy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.clearInitialMarginOnBuy = function() {
  return this.setInitialMarginOnBuy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.hasInitialMarginOnBuy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MoneyValue initial_margin_on_sell = 2;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.getInitialMarginOnSell = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 2));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.setInitialMarginOnSell = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.clearInitialMarginOnSell = function() {
  return this.setInitialMarginOnSell(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.hasInitialMarginOnSell = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Quotation min_price_increment = 3;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 3));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Quotation min_price_increment_amount = 4;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.getMinPriceIncrementAmount = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 4));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.setMinPriceIncrementAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.clearMinPriceIncrementAmount = function() {
  return this.setMinPriceIncrementAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetFuturesMarginResponse.prototype.hasMinPriceIncrementAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instrument: (f = msg.getInstrument()) && proto.tinkoff.public.invest.api.contract.v1.Instrument.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse;
  return proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Instrument;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Instrument.deserializeBinaryFromReader);
      msg.setInstrument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Instrument.serializeBinaryToWriter
    );
  }
};


/**
 * optional Instrument instrument = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Instrument}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.prototype.getInstrument = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Instrument} */ (
    jspb.Message.getWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Instrument, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Instrument|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.prototype.setInstrument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.prototype.clearInstrument = function() {
  return this.setInstrument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentResponse.prototype.hasInstrument = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Instrument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Instrument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lot: jspb.Message.getFieldWithDefault(msg, 5, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    klong: (f = msg.getKlong()) && common_pb.Quotation.toObject(includeInstance, f),
    kshort: (f = msg.getKshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlong: (f = msg.getDlong()) && common_pb.Quotation.toObject(includeInstance, f),
    dshort: (f = msg.getDshort()) && common_pb.Quotation.toObject(includeInstance, f),
    dlongMin: (f = msg.getDlongMin()) && common_pb.Quotation.toObject(includeInstance, f),
    dshortMin: (f = msg.getDshortMin()) && common_pb.Quotation.toObject(includeInstance, f),
    shortEnabledFlag: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    name: jspb.Message.getFieldWithDefault(msg, 14, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 15, ""),
    countryOfRisk: jspb.Message.getFieldWithDefault(msg, 16, ""),
    countryOfRiskName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    instrumentType: jspb.Message.getFieldWithDefault(msg, 18, ""),
    tradingStatus: jspb.Message.getFieldWithDefault(msg, 19, 0),
    otcFlag: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    buyAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    sellAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    minPriceIncrement: (f = msg.getMinPriceIncrement()) && common_pb.Quotation.toObject(includeInstance, f),
    apiTradeAvailableFlag: jspb.Message.getBooleanFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Instrument;
  return proto.tinkoff.public.invest.api.contract.v1.Instrument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Instrument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKlong(value);
      break;
    case 8:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setKshort(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlong(value);
      break;
    case 10:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshort(value);
      break;
    case 11:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDlongMin(value);
      break;
    case 12:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setDshortMin(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShortEnabledFlag(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRisk(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryOfRiskName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstrumentType(value);
      break;
    case 19:
      var value = /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (reader.readEnum());
      msg.setTradingStatus(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOtcFlag(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyAvailableFlag(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellAvailableFlag(value);
      break;
    case 23:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setMinPriceIncrement(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApiTradeAvailableFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Instrument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Instrument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLot();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKlong();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getKshort();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlong();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshort();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDlongMin();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getDshortMin();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getShortEnabledFlag();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCountryOfRisk();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCountryOfRiskName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getInstrumentType();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getTradingStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = message.getOtcFlag();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getBuyAvailableFlag();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getSellAvailableFlag();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getMinPriceIncrement();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getApiTradeAvailableFlag();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_code = 3;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getClassCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setClassCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string isin = 4;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 lot = 5;
 * @return {number}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getLot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setLot = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Quotation klong = 7;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getKlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 7));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setKlong = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearKlong = function() {
  return this.setKlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasKlong = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Quotation kshort = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getKshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setKshort = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearKshort = function() {
  return this.setKshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasKshort = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation dlong = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getDlong = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setDlong = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearDlong = function() {
  return this.setDlong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasDlong = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Quotation dshort = 10;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getDshort = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 10));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setDshort = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearDshort = function() {
  return this.setDshort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasDshort = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Quotation dlong_min = 11;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getDlongMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 11));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setDlongMin = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearDlongMin = function() {
  return this.setDlongMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasDlongMin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Quotation dshort_min = 12;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getDshortMin = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 12));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setDshortMin = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearDshortMin = function() {
  return this.setDshortMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasDshortMin = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool short_enabled_flag = 13;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getShortEnabledFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setShortEnabledFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string name = 14;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string exchange = 15;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string country_of_risk = 16;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getCountryOfRisk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setCountryOfRisk = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string country_of_risk_name = 17;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getCountryOfRiskName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setCountryOfRiskName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string instrument_type = 18;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getInstrumentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setInstrumentType = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional SecurityTradingStatus trading_status = 19;
 * @return {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getTradingStatus = function() {
  return /** @type {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setTradingStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional bool otc_flag = 20;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getOtcFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setOtcFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool buy_available_flag = 21;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getBuyAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setBuyAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool sell_available_flag = 22;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getSellAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setSellAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional Quotation min_price_increment = 23;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getMinPriceIncrement = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 23));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setMinPriceIncrement = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.clearMinPriceIncrement = function() {
  return this.setMinPriceIncrement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.hasMinPriceIncrement = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool api_trade_available_flag = 24;
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.getApiTradeAvailableFlag = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Instrument} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Instrument.prototype.setApiTradeAvailableFlag = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    figi: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest;
  return proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFigi(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFigi();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string figi = 1;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.getFigi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.setFigi = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dividendsList: jspb.Message.toObjectList(msg.getDividendsList(),
    proto.tinkoff.public.invest.api.contract.v1.Dividend.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse;
  return proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tinkoff.public.invest.api.contract.v1.Dividend;
      reader.readMessage(value,proto.tinkoff.public.invest.api.contract.v1.Dividend.deserializeBinaryFromReader);
      msg.addDividends(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDividendsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tinkoff.public.invest.api.contract.v1.Dividend.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Dividend dividends = 1;
 * @return {!Array<!proto.tinkoff.public.invest.api.contract.v1.Dividend>}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.prototype.getDividendsList = function() {
  return /** @type{!Array<!proto.tinkoff.public.invest.api.contract.v1.Dividend>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tinkoff.public.invest.api.contract.v1.Dividend, 1));
};


/**
 * @param {!Array<!proto.tinkoff.public.invest.api.contract.v1.Dividend>} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.prototype.setDividendsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Dividend=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend}
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.prototype.addDividends = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tinkoff.public.invest.api.contract.v1.Dividend, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.GetDividendsResponse.prototype.clearDividendsList = function() {
  return this.setDividendsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.toObject = function(opt_includeInstance) {
  return proto.tinkoff.public.invest.api.contract.v1.Dividend.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Dividend} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.toObject = function(includeInstance, msg) {
  var f, obj = {
    dividendNet: (f = msg.getDividendNet()) && common_pb.MoneyValue.toObject(includeInstance, f),
    paymentDate: (f = msg.getPaymentDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    declaredDate: (f = msg.getDeclaredDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastBuyDate: (f = msg.getLastBuyDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dividendType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    recordDate: (f = msg.getRecordDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    regularity: jspb.Message.getFieldWithDefault(msg, 7, ""),
    closePrice: (f = msg.getClosePrice()) && common_pb.MoneyValue.toObject(includeInstance, f),
    yieldValue: (f = msg.getYieldValue()) && common_pb.Quotation.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tinkoff.public.invest.api.contract.v1.Dividend;
  return proto.tinkoff.public.invest.api.contract.v1.Dividend.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Dividend} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setDividendNet(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPaymentDate(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeclaredDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastBuyDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDividendType(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRecordDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegularity(value);
      break;
    case 8:
      var value = new common_pb.MoneyValue;
      reader.readMessage(value,common_pb.MoneyValue.deserializeBinaryFromReader);
      msg.setClosePrice(value);
      break;
    case 9:
      var value = new common_pb.Quotation;
      reader.readMessage(value,common_pb.Quotation.deserializeBinaryFromReader);
      msg.setYieldValue(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tinkoff.public.invest.api.contract.v1.Dividend.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tinkoff.public.invest.api.contract.v1.Dividend} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDividendNet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getPaymentDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeclaredDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastBuyDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDividendType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRecordDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRegularity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getClosePrice();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.MoneyValue.serializeBinaryToWriter
    );
  }
  f = message.getYieldValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Quotation.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional MoneyValue dividend_net = 1;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getDividendNet = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 1));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setDividendNet = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearDividendNet = function() {
  return this.setDividendNet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasDividendNet = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp payment_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getPaymentDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setPaymentDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearPaymentDate = function() {
  return this.setPaymentDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasPaymentDate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp declared_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getDeclaredDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setDeclaredDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearDeclaredDate = function() {
  return this.setDeclaredDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasDeclaredDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp last_buy_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getLastBuyDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setLastBuyDate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearLastBuyDate = function() {
  return this.setLastBuyDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasLastBuyDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string dividend_type = 5;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getDividendType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setDividendType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp record_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getRecordDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setRecordDate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearRecordDate = function() {
  return this.setRecordDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasRecordDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string regularity = 7;
 * @return {string}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getRegularity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setRegularity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional MoneyValue close_price = 8;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getClosePrice = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.MoneyValue} */ (
    jspb.Message.getWrapperField(this, common_pb.MoneyValue, 8));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.MoneyValue|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setClosePrice = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearClosePrice = function() {
  return this.setClosePrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasClosePrice = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Quotation yield_value = 9;
 * @return {?proto.tinkoff.public.invest.api.contract.v1.Quotation}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getYieldValue = function() {
  return /** @type{?proto.tinkoff.public.invest.api.contract.v1.Quotation} */ (
    jspb.Message.getWrapperField(this, common_pb.Quotation, 9));
};


/**
 * @param {?proto.tinkoff.public.invest.api.contract.v1.Quotation|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setYieldValue = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearYieldValue = function() {
  return this.setYieldValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasYieldValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
*/
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tinkoff.public.invest.api.contract.v1.Dividend} returns this
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tinkoff.public.invest.api.contract.v1.Dividend.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentIdType = {
  INSTRUMENT_ID_UNSPECIFIED: 0,
  INSTRUMENT_ID_TYPE_FIGI: 1,
  INSTRUMENT_ID_TYPE_TICKER: 2
};

/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.InstrumentStatus = {
  INSTRUMENT_STATUS_UNSPECIFIED: 0,
  INSTRUMENT_STATUS_BASE: 1,
  INSTRUMENT_STATUS_ALL: 2
};

/**
 * @enum {number}
 */
proto.tinkoff.public.invest.api.contract.v1.ShareType = {
  SHARE_TYPE_UNSPECIFIED: 0,
  SHARE_TYPE_COMMON: 1,
  SHARE_TYPE_PREFERRED: 2,
  SHARE_TYPE_ADR: 3,
  SHARE_TYPE_GDR: 4,
  SHARE_TYPE_MLP: 5,
  SHARE_TYPE_NY_REG_SHRS: 6,
  SHARE_TYPE_CLOSED_END_FUND: 7,
  SHARE_TYPE_REIT: 8
};

goog.object.extend(exports, proto.tinkoff.public.invest.api.contract.v1);
